{"mappings":"CAGSA,SAASC,cAAc,kBACxBD,SAASC,cAAc,iBACrBD,SAASC,cAAc,mBACvBD,SAASC,cAAc,UACzBD,SAASC,cAAc,SAGrBC,iBAAiB,UAe3B,SAAsBC,GACpBA,EAAMC","sources":["src/js/03-promises.js"],"sourcesContent":["let delayCounter = 3000;\n\nconst refs = {\n  delay: document.querySelector('[name=\"delay\"]'),\n  step: document.querySelector('[name=\"step\"]'),\n  amount: document.querySelector('[name=\"amount\"]'),\n  submit: document.querySelector('button'),\n  form: document.querySelector('form'),\n};\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n\n  // for (let amountCounter = 1; amountCounter <= 5; amountCounter += 1) {\n  //   createPromise(amountCounter, delayCounter)\n  //     .then(({ position, delay }) => {\n  //       console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  //     })\n  //     .catch(({ position, delay }) => {\n  //       console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  //     });\n  // }\n}\n"],"names":["document","querySelector","addEventListener","event","preventDefault"],"version":3,"file":"03-promises.ba272f80.js.map"}