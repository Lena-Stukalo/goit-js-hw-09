{"mappings":"YAAA,IAAIA,EAAe,KAWnB,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,YAEpBA,OAnBM,CACXA,MAAOQ,SAASC,cAAc,kBAC9BC,KAAMF,SAASC,cAAc,iBAC7BE,OAAQH,SAASC,cAAc,mBAC/BG,OAAQJ,SAASC,cAAc,UAC/BI,KAAML,SAASC,cAAc,UAG1BI,KAAKC,iBAAiB,UAe3B,SAAsBC,GACpBA,EAAMC,iBACN,IAEuBC,EAAnBF,EAAMG,cADRC,SAAYC,EAAKH,EAALjB,MAAOW,EAAMM,EAANN,OAAQD,EAAIO,EAAJP,KAE7BW,QAAQC,MACRzB,EAAe0B,OAAOH,EAAMI,OAC5B,IACE,IAAIC,EAAgB,EACpBA,GAAiBF,OAAOZ,EAAOa,OAC/BC,GAAiB,EAEjB3B,EAAc2B,EAAe5B,GAC1B6B,MAAK,SAAAC,G,IAAG5B,EAAQ4B,EAAR5B,SAAUC,EAAK2B,EAAL3B,MACjBqB,QAAQC,IAAI,uBAAwCM,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,UAE3D6B,OAAM,SAAAF,G,IAAG5B,EAAQ4B,EAAR5B,SAAUC,EAAK2B,EAAL3B,MAClBqB,QAAQC,IAAI,sBAAqCM,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,UAE3DH,GAAgB0B,OAAOb,EAAKc,U","sources":["src/js/03-promises.js"],"sourcesContent":["let delayCounter = null;\nconst refs = {\n  delay: document.querySelector('[name=\"delay\"]'),\n  step: document.querySelector('[name=\"step\"]'),\n  amount: document.querySelector('[name=\"amount\"]'),\n  submit: document.querySelector('button'),\n  form: document.querySelector('form'),\n};\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  const {\n    elements: { delay, amount, step },\n  } = event.currentTarget;\n  console.log();\n  delayCounter = Number(delay.value);\n  for (\n    let amountCounter = 1;\n    amountCounter <= Number(amount.value);\n    amountCounter += 1\n  ) {\n    createPromise(amountCounter, delayCounter)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delayCounter += Number(step.value);\n  }\n}\n"],"names":["$ce04d3a99e08e73b$var$delayCounter","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","step","amount","submit","form","addEventListener","event","preventDefault","_elements","currentTarget","elements","delay1","console","log","Number","value","amountCounter","then","param","concat","catch"],"version":3,"file":"03-promises.d2b16fad.js.map"}